# Install dependencies only when needed
FROM node:16-alpine AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# If using npm with a `package-lock.json` comment out above and use below instead
# COPY package.json package-lock.json ./ 
# RUN npm ci

# Rebuild the source code only when needed
FROM node:16-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Accepting build time args
ARG NEXT_PUBLIC_API_BASE_URL
ARG NEXT_PUBLIC_APP_BROWSER_BASE_URL
ARG NEXT_PUBLIC_PAYMENT_APP_URL
ARG NEXT_PUBLIC_DEFAULT_SESSION_PERIOD
ARG NEXT_PUBLIC_MAPBOX_TOKEN
ARG NEXT_PUBLIC_APP_ASSET_URL
ARG NEXT_PUBLIC_GOOGLE_ANALYTICS
ARG NEXT_PUBLIC_LOG_ROCKET_APP_ID

# Setting build time env variables
ENV NEXT_PUBLIC_API_BASE_URL $NEXT_PUBLIC_API_BASE_URL
ENV NEXT_PUBLIC_APP_BROWSER_BASE_URL $NEXT_PUBLIC_APP_BROWSER_BASE_URL
ENV NEXT_PUBLIC_PAYMENT_APP_URL $NEXT_PUBLIC_PAYMENT_APP_URL
ENV NEXT_PUBLIC_DEFAULT_SESSION_PERIOD $NEXT_PUBLIC_DEFAULT_SESSION_PERIOD
ENV NEXT_PUBLIC_MAPBOX_TOKEN $NEXT_PUBLIC_MAPBOX_TOKEN
ENV NEXT_PUBLIC_APP_ASSET_URL $NEXT_PUBLIC_APP_ASSET_URL
ENV NEXT_PUBLIC_GOOGLE_ANALYTICS $NEXT_PUBLIC_GOOGLE_ANALYTICS
ENV NEXT_PUBLIC_LOG_ROCKET_APP_ID $NEXT_PUBLIC_LOG_ROCKET_APP_ID

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED 1
RUN yarn build

# If using npm comment out above and use below instead
# RUN npm run build

# Production image, copy all the files and run next
FROM node:16-alpine AS runner
WORKDIR /app

ARG NEW_RELIC_FILE_PATH

ENV NODE_ENV production

# New Relic APM Configs
ENV NEW_RELIC_FILE_PATH $NEW_RELIC_FILE_PATH

# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

RUN yarn add @newrelic/next
RUN yarn add newrelic

# You only need to copy next.config.js if you are NOT using the default configuration
COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/${NEW_RELIC_FILE_PATH}/newrelic.js ./newrelic.js

# Automatically leverage output traces to reduce image size 
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 80

ENV PORT 80

CMD ["node", "-r", "@newrelic/next", "server.js"]


# FROM nginx:alpine AS reverse_proxy
# COPY --from=builder /app/out /usr/share/nginx/html
# RUN rm /etc/nginx/conf.d/default.conf
# COPY deployment/nginx/nginx.conf /etc/nginx/conf.d
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]
